前言
====

日常科研工作中，我们需要使用计算机语言编写程序和脚本，以自动完成相应的数据处理或科学计算。
因此，需要了解\ **常见的计算机语言**\  、\ **编译和链接**\ 以及\ **版本控制**\ 等。

计算机语言一般可以分为两大类。第一类是需要编译和链接的\ **编译语言**\ ，如 C 语言、
Fortran 语言；第二类是不需编译便可直接执行的\ **解释型语言**\ ，也称\ **脚本语言**\ ，如
Python 语言、Julia 语言。通常来说，使用编译语言编写的代码运行速度更快，
但是编写代码的时间成本更多，且需要我们了解更多的编程基础；脚本语言易于编写，
开源的软件库和模块更多，但是运行速度较慢。

我们推荐至少掌握一门编译语言，同时至少掌握一门脚本语言。日常的数据处理和简单的科学计算
可以使用脚本语言快速实现，以便迅速上手和开展研究。如果需要更高的计算效率，可以
使用编译语言编写代码。因此，我们在完成一个项目的时候，往往是同时使用这两类计算机语言
来编写代码。有时候还可以用脚本语言快速、便捷地实现一个任务的一部分，然后调用使用编译语言
书写的需求计算效率的另外一部分的代码来加速计算。

需要注意的是，在本教程中我们将 Shell 也归为脚本语言，并以一种常见的 Shell 来讲述其
基本语法和用途，即 Bash。严格说来，Linux 和 maxOS 系统的 Shell 其实本身只是一个空壳，
具有最基本的条件判断和循环功能。借助 Linux 系统下命令行工具，
如 ``awk``\ 、\ ``sort``\ 、\ ``grep``\ ，其可以用来做日常的数据处理、字符串处理等。
其他常见的 Shell 还有 zsh、csh 等。需要注意的是 Shell 脚本仅仅适合用几行就可以搞定的
简单程序，更复杂的情况建议使用其他脚本语言来完成。
